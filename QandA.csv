'break','exit a loop or switch statement'
'case','used in a switch statement to specify a possible match for the input value'
'chan','create a channel for communication between goroutines'
'const','define a constant value that cannot be changed'
'continue','skip the current iteration of a loop and move to the next iteration'
'defer','schedule a function call to be executed after the current function returns'
'else','specify an alternative block of code to execute if the if condition is false'
'fallthrough','used in a switch statement to specify that control should move to the next case'
'for','create a loop that repeats a block of code a specified number of times'
'func','define a function that can be called from other parts of the program'
'go','start a new goroutine'
'goto','jump to a specific label within the current function'
'if','execute a block of code only if a certain condition is true'
'import','import a package into the program'
'interface','define a set of methods that a type must implement'
'map','define a collection of key-value pairs'
'package','define a package that contains one or more Go source files'
'range','iterate over an array, slice, string, map, or channel'
'return','exit a function and return a value to the caller'
'select','wait for a value to be sent to one of several channels'
'struct','define a collection of fields that represent a complex data type'
'switch','execute a block of code based on the value of an expression'
'type','define a new data type'
'var','declare a variable'
